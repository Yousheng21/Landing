import React, { useState } from "react";

import { motion, AnimatePresence } from "framer-motion";
import styled, { useTheme } from "styled-components";

export const Tabs = () => {
  const [selectedTab, setSelectedTab] = useState(tabs[0]);

  const theme = useTheme();

  return (
    <div id="about">
      <Nav>
        <TabsContainer>
          {tabs.map((item) => (
            <TabMotion
              key={item.title}
              initial={false}
              animate={{
                color: item === selectedTab ? theme.text : "grey",
                fontWeight: item === selectedTab ? "700" : "500",
              }}
              onClick={() => setSelectedTab(item)}
            >
              <span className="pb-3">{item.title}</span>
              {item === selectedTab ? <UnderlineMotion layoutId="underline" id="underline" /> : null}
            </TabMotion>
          ))}
        </TabsContainer>
      </Nav>
      <main>
        <AnimatePresence mode="wait">
          <motion.div
            key={selectedTab ? selectedTab.title : "empty"}
            initial={{ y: 10, opacity: 0 }}
            animate={{ y: 0, opacity: 1 }}
            exit={{ y: -10, opacity: 0 }}
            transition={{ duration: 0.2 }}
            className="flex flex-col align-middle justify-center gap-10"
          >
            <TextInfo>{selectedTab ? selectedTab.info : "üòã"}</TextInfo>
            <div className="flex justify-center">
              {selectedTab.images.map((path) => (
                <img key={path} width={"60%"} height={"40%"} className="rounded-xl" src={path} />
              ))}
            </div>
          </motion.div>
        </AnimatePresence>
      </main>
    </div>
  );
};

const Nav = styled.nav`
  padding: 5px 5px 0;
  margin-bottom: 30px;
`;

const TabsContainer = styled.ul`
  list-style: none;
  padding: 0;
  margin: 0;
  font-size: 20px;
  display: flex;
  width: 100%;
`;

const TabMotion = styled(motion.li)`
  list-style: none;
  margin: 0;
  font-size: 20px;
  width: 100%;
  padding: 10px 15px;
  position: relative;
  cursor: pointer;
  display: flex;
  align-items: center;
  flex: 1;
`;

const UnderlineMotion = styled(motion.div)`
  position: absolute;
  height: 2px;
  bottom: -2px;
  left: 0;
  right: 0;
  height: 2px;
  background: ${(props) => props.theme.orange};
  margin-top: 30px;
`;

const TextInfo = styled.span`
  text-align: center;
  color: ${(props) => props.theme.text};
  font-size: 20px;
`;

/**
 * ==============   Data   ================
 */

const tabs = [
  {
    title: "–¢—Ä–∏ —Ä–µ–∂–∏–º–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏",
    info: "–¢—Ä–∏ —Ä–µ–∂–∏–º–∞ –µ–∑–¥—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –ø–æ—á—É—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏. –†–µ–∂–∏–º ¬´S¬ª —É–≤–µ–ª–∏—á–∏—Ç–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å, –µ—Å–ª–∏ –æ–ø–∞–∑–¥—ã–≤–∞–µ—Ç–µ –Ω–∞ —Ä–∞–±–æ—Ç—É. –í–æ –≤—Ä–µ–º—è –ø—Ä–æ–≥—É–ª–∫–∏ –ø–æ –ø–∞—Ä–∫—É –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ —Ä–µ–∂–∏–º ¬´D¬ª. –í–∫–ª—é—á–∏—Ç–µ —Ä–µ–∂–∏–º ¬´–ü–µ—à–µ—Ö–æ–¥¬ª, –∫–æ–≥–¥–∞ –¥–≤–∏–≥–∞–µ—Ç–µ—Å—å –ø–æ –æ–∂–∏–≤–ª—ë–Ω–Ω–æ–π —É–ª–∏—Ü–µ.",
    images: ["assets/1.png"],
  },
  {
    title: "–°–∏—Å—Ç–µ–º–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏",
    info: "–í–æ –≤—Ä–µ–º—è —Ç–æ—Ä–º–æ–∂–µ–Ω–∏—è –∏ –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ –∏–Ω–µ—Ä—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ—Ç –∫–∏–Ω–µ—Ç–∏—á–µ—Å–∫—É—é —ç–Ω–µ—Ä–≥–∏—é –≤ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫—É—é, –ø–æ–∑–≤–æ–ª—è—è —É–≤–µ–ª–∏—á–∏—Ç—å –æ–±—â–∏–π –∑–∞–ø–∞—Å —Ö–æ–¥–∞ —Å–∞–º–æ–∫–∞—Ç–∞.",
    images: ["assets/2.png"],
  },
  {
    title: "–ú–æ—â–Ω–∞—è –±–∞—Ç–∞—Ä–µ—è",
    info: "–°–∞–º–æ–∫–∞—Ç –æ—Å–Ω–∞—â–µ–Ω –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–æ–º –µ–º–∫–æ—Å—Ç—å—é 12 800 –º–ê—á. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞—Ç—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –¥–æ 45 –∫–º –±–µ–∑ –ø–æ–¥–∑–∞—Ä—è–¥–∫–∏.",
    images: ["assets/3.png"],
  },
];
